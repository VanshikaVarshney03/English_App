import React, { useState } from "react";
import { useNavigate } from 'react-router-dom';

export default function AccentTraining() {
  const navigate = useNavigate();
  const [darkMode, setDarkMode] = useState(false);
  const [selectedLesson, setSelectedLesson] = useState(null);
  const [completedLessons, setCompletedLessons] = useState([]);

  const lessons = [
    {
      id: 1,
      title: "Vowel Sounds Mastery (рд╕реНрд╡рд░ рдзреНрд╡рдирд┐ рдорд╣рд╛рд░рдд)",
      emoji: "ЁЯЕ░я╕П",
      color: "from-blue-400 to-cyan-500",
      difficulty: "hard",
      description: "Perfect English vowel pronunciation",
      exercises: [
        {
          sound: "Short 'i' vs Long 'ee'",
          examples: [
            { word: "ship", phonetic: "/╩Г╔кp/", hindi: "рдЬрд╣рд╛рдЬрд╝", contrast: "sheep /╩Гi╦Рp/ - рднреЗрдбрд╝" },
            { word: "bit", phonetic: "/b╔кt/", hindi: "рдереЛрдбрд╝рд╛", contrast: "beat /bi╦Рt/ - рдкреАрдЯрдирд╛" },
            { word: "sit", phonetic: "/s╔кt/", hindi: "рдмреИрдардирд╛", contrast: "seat /si╦Рt/ - рд╕реАрдЯ" }
          ],
          tip: "Short 'i': Tongue relaxed, mouth slightly open. Long 'ee': Tongue high, teeth showing in a smile.",
          hindiTip: "рдЫреЛрдЯрд╛ 'i': рдЬреАрдн рдЖрд░рд╛рдо рд╕реЗ, рдореБрдВрд╣ рдереЛрдбрд╝рд╛ рдЦреБрд▓рд╛ред рд▓рдВрдмрд╛ 'ee': рдЬреАрдн рдКрдкрд░, рджрд╛рдВрдд рджрд┐рдЦрддреЗ рд╣реБрдПред"
        },
        {
          sound: "Short 'a' vs Long 'ay'",
          examples: [
            { word: "hat", phonetic: "/h├жt/", hindi: "рдЯреЛрдкреА", contrast: "hate /he╔кt/ - рдирдлрд░рдд" },
            { word: "cap", phonetic: "/k├жp/", hindi: "рдЯреЛрдкреА", contrast: "cape /ke╔кp/ - рдХреЗрдк" },
            { word: "mad", phonetic: "/m├жd/", hindi: "рдкрд╛рдЧрд▓", contrast: "made /me╔кd/ - рдмрдирд╛рдпрд╛" }
          ],
          tip: "Short 'a': Mouth wide, jaw drops. Long 'ay': Starts with 'eh', glides to 'ee'.",
          hindiTip: "рдЫреЛрдЯрд╛ 'a': рдореБрдВрд╣ рдЪреМрдбрд╝рд╛, рдЬрдмрдбрд╝рд╛ рдЧрд┐рд░рддрд╛ рд╣реИред рд▓рдВрдмрд╛ 'ay': 'рдПрд╣' рд╕реЗ рд╢реБрд░реВ, 'рдИ' рддрдХ рдЧреНрд▓рд╛рдЗрдбред"
        },
        {
          sound: "Schwa Sound /╔Щ/",
          examples: [
            { word: "about", phonetic: "/╔Щ╦Иba╩Кt/", hindi: "рдХреЗ рдмрд╛рд░реЗ рдореЗрдВ", stress: "Unstressed first syllable" },
            { word: "banana", phonetic: "/b╔Щ╦Иn├жn╔Щ/", hindi: "рдХреЗрд▓рд╛", stress: "First and last syllables unstressed" },
            { word: "camera", phonetic: "/╦Иk├жm╔Щr╔Щ/", hindi: "рдХреИрдорд░рд╛", stress: "Middle and last syllables unstressed" }
          ],
          tip: "The most common vowel in English! Very short, relaxed, neutral sound like 'uh'.",
          hindiTip: "рдЕрдВрдЧреНрд░реЗрдЬреА рдореЗрдВ рд╕рдмрд╕реЗ рдЖрдо рд╕реНрд╡рд░! рдмрд╣реБрдд рдЫреЛрдЯрд╛, рдЖрд░рд╛рдорджрд╛рдпрдХ, рддрдЯрд╕реНрде рдзреНрд╡рдирд┐ рдЬреИрд╕реЗ 'рдЕ'ред"
        }
      ]
    },
    {
      id: 2,
      title: "Consonant Clusters (рд╡реНрдпрдВрдЬрди рд╕рдореВрд╣)",
      emoji: "ЁЯФд",
      color: "from-purple-400 to-pink-500",
      difficulty: "hard",
      description: "Master difficult consonant combinations",
      exercises: [
        {
          cluster: "TH Sounds - /╬╕/ and /├░/",
          examples: [
            { word: "think", phonetic: "/╬╕╔к┼Лk/", hindi: "рд╕реЛрдЪрдирд╛", type: "Voiceless /╬╕/ - tongue between teeth" },
            { word: "this", phonetic: "/├░╔кs/", hindi: "рдпрд╣", type: "Voiced /├░/ - tongue between teeth, vibration" },
            { word: "three", phonetic: "/╬╕ri╦Р/", hindi: "рддреАрди", type: "Voiceless" },
            { word: "mother", phonetic: "/╦Иm╩М├░╔Щr/", hindi: "рдорд╛рдБ", type: "Voiced" }
          ],
          tip: "Place tongue between teeth, blow air for /╬╕/, add voice for /├░/. Don't say 't' or 'd'!",
          hindiTip: "рдЬреАрдн рджрд╛рдВрддреЛрдВ рдХреЗ рдмреАрдЪ рд░рдЦреЗрдВ, /╬╕/ рдХреЗ рд▓рд┐рдП рд╣рд╡рд╛ рдлреВрдВрдХреЗрдВ, /├░/ рдХреЗ рд▓рд┐рдП рдЖрд╡рд╛рдЬ рдЬреЛрдбрд╝реЗрдВред 'рдд' рдпрд╛ 'рдж' рдордд рдмреЛрд▓реЗрдВ!"
        },
        {
          cluster: "R Sound - /r/",
          examples: [
            { word: "red", phonetic: "/red/", hindi: "рд▓рд╛рд▓", position: "Beginning" },
            { word: "berry", phonetic: "/╦Иber╔к/", hindi: "рдмреЗрд░реА", position: "Middle" },
            { word: "car", phonetic: "/k╔С╦Рr/", hindi: "рдХрд╛рд░", position: "End (American)" }
          ],
          tip: "Curl tongue back without touching roof of mouth. Lips slightly rounded.",
          hindiTip: "рдЬреАрдн рдХреЛ рдореБрдВрд╣ рдХреА рдЫрдд рдХреЛ рдЫреБрдП рдмрд┐рдирд╛ рдкреАрдЫреЗ рдореЛрдбрд╝реЗрдВред рд╣реЛрдВрда рдереЛрдбрд╝реЗ рдЧреЛрд▓ред"
        },
        {
          cluster: "L Sound - /l/",
          examples: [
            { word: "light", phonetic: "/la╔кt/", hindi: "рдкреНрд░рдХрд╛рд╢", type: "Clear L - tongue tip on ridge" },
            { word: "ball", phonetic: "/b╔Ф╦Рl/", hindi: "рдЧреЗрдВрдж", type: "Dark L - tongue back raised" },
            { word: "million", phonetic: "/╦Иm╔кlj╔Щn/", hindi: "рдорд┐рд▓рд┐рдпрди", type: "Clear L in middle" }
          ],
          tip: "Clear L: Tongue tip touches ridge behind teeth. Dark L: Back of tongue raised.",
          hindiTip: "рд╕реНрдкрд╖реНрдЯ L: рдЬреАрдн рдХреА рдиреЛрдХ рджрд╛рдВрддреЛрдВ рдХреЗ рдкреАрдЫреЗ рд░рд┐рдЬ рдХреЛ рдЫреВрддреА рд╣реИред рдЧрд╣рд░рд╛ L: рдЬреАрдн рдХрд╛ рдкрд┐рдЫрд▓рд╛ рд╣рд┐рд╕реНрд╕рд╛ рдЙрдард╛ рд╣реБрдЖред"
        }
      ]
    },
    {
      id: 3,
      title: "Word Stress Patterns (рд╢рдмреНрдж рдмрд▓ рдкреИрдЯрд░реНрди)",
      emoji: "ЁЯУН",
      color: "from-orange-400 to-red-500",
      difficulty: "hard",
      description: "Learn correct stress placement",
      exercises: [
        {
          pattern: "Two-Syllable Nouns",
          rule: "Usually stress on FIRST syllable",
          examples: [
            { word: "TAble", phonetic: "/╦Иte╔кb╔Щl/", hindi: "рдореЗрдЬрд╝", stressed: "TA" },
            { word: "PICture", phonetic: "/╦Иp╔кkt╩Г╔Щr/", hindi: "рддрд╕реНрд╡реАрд░", stressed: "PIC" },
            { word: "MUsic", phonetic: "/╦Иmju╦Рz╔кk/", hindi: "рд╕рдВрдЧреАрдд", stressed: "MU" }
          ],
          tip: "Make first syllable LOUDER and LONGER. Second syllable uses schwa /╔Щ/.",
          hindiTip: "рдкрд╣рд▓реЗ рдЕрдХреНрд╖рд░ рдХреЛ рддреЗрдЬрд╝ рдФрд░ рд▓рдВрдмрд╛ рдмрдирд╛рдПрдВред рджреВрд╕рд░реЗ рдЕрдХреНрд╖рд░ рдореЗрдВ schwa /╔Щ/ рдХрд╛ рдЙрдкрдпреЛрдЧ рдХрд░реЗрдВред"
        },
        {
          pattern: "Two-Syllable Verbs",
          rule: "Usually stress on SECOND syllable",
          examples: [
            { word: "beGIN", phonetic: "/b╔к╦И╔б╔кn/", hindi: "рд╢реБрд░реВ рдХрд░рдирд╛", stressed: "GIN" },
            { word: "forGET", phonetic: "/f╔Щr╦И╔бet/", hindi: "рднреВрд▓ рдЬрд╛рдирд╛", stressed: "GET" },
            { word: "reLAX", phonetic: "/r╔к╦Иl├жks/", hindi: "рдЖрд░рд╛рдо рдХрд░рдирд╛", stressed: "LAX" }
          ],
          tip: "Second syllable is LOUDER. First syllable often uses schwa.",
          hindiTip: "рджреВрд╕рд░рд╛ рдЕрдХреНрд╖рд░ рддреЗрдЬрд╝ рд╣реИред рдкрд╣рд▓реЗ рдЕрдХреНрд╖рд░ рдореЗрдВ рдЕрдХреНрд╕рд░ schwa рдХрд╛ рдЙрдкрдпреЛрдЧ рд╣реЛрддрд╛ рд╣реИред"
        },
        {
          pattern: "Word Pairs - Noun vs Verb",
          rule: "Same spelling, different stress changes meaning",
          examples: [
            { word: "REcord (noun)", phonetic: "/╦Иrek╔Ф╦Рrd/", hindi: "рд░рд┐рдХреЙрд░реНрдб", meaning: "a disc" },
            { word: "reCORD (verb)", phonetic: "/r╔к╦Иk╔Ф╦Рrd/", hindi: "рд░рд┐рдХреЙрд░реНрдб рдХрд░рдирд╛", meaning: "to save audio" },
            { word: "PREsent (noun)", phonetic: "/╦Иprez╔Щnt/", hindi: "рдЙрдкрд╣рд╛рд░", meaning: "a gift" },
            { word: "preSENT (verb)", phonetic: "/pr╔к╦Иzent/", hindi: "рдкреНрд░рд╕реНрддреБрдд рдХрд░рдирд╛", meaning: "to show" }
          ],
          tip: "Stress changes meaning completely! Practice both versions.",
          hindiTip: "рдмрд▓ рдХрд╛ рд╕реНрдерд╛рди рдЕрд░реНрде рдХреЛ рдкреВрд░реА рддрд░рд╣ рдмрджрд▓ рджреЗрддрд╛ рд╣реИ! рджреЛрдиреЛрдВ рд╕рдВрд╕реНрдХрд░рдгреЛрдВ рдХрд╛ рдЕрднреНрдпрд╛рд╕ рдХрд░реЗрдВред"
        }
      ]
    },
    {
      id: 4,
      title: "Sentence Intonation (рд╡рд╛рдХреНрдп рд╕реНрд╡рд░рдорд╛рди)",
      emoji: "ЁЯУИ",
      color: "from-green-400 to-teal-500",
      difficulty: "hard",
      description: "Master rising and falling tones",
      exercises: [
        {
          pattern: "Falling Intonation тЖУ",
          usage: "Statements, commands, wh-questions",
          examples: [
            { sentence: "I live in Mumbai. тЖУ", hindi: "рдореИрдВ рдореБрдВрдмрдИ рдореЗрдВ рд░рд╣рддрд╛ рд╣реВрдВред", tone: "Falls at end" },
            { sentence: "Close the door. тЖУ", hindi: "рджрд░рд╡рд╛рдЬрд╝рд╛ рдмрдВрдж рдХрд░реЛред", tone: "Command - falls" },
            { sentence: "Where do you work? тЖУ", hindi: "рдЖрдк рдХрд╣рд╛рдБ рдХрд╛рдо рдХрд░рддреЗ рд╣реИрдВ?", tone: "Wh-question - falls" }
          ],
          tip: "Voice goes DOWN at the end. Sounds confident and definite.",
          hindiTip: "рдЖрд╡рд╛рдЬрд╝ рдЕрдВрдд рдореЗрдВ рдиреАрдЪреЗ рдЬрд╛рддреА рд╣реИред рдЖрддреНрдорд╡рд┐рд╢реНрд╡рд╛рд╕ рдФрд░ рдирд┐рд╢реНрдЪрд┐рдд рд▓рдЧрддреА рд╣реИред"
        },
        {
          pattern: "Rising Intonation тЖС",
          usage: "Yes/No questions, uncertainty, lists",
          examples: [
            { sentence: "Are you coming? тЖС", hindi: "рдХреНрдпрд╛ рддреБрдо рдЖ рд░рд╣реЗ рд╣реЛ?", tone: "Rises at end" },
            { sentence: "Really? тЖС", hindi: "рд╕рдЪ рдореЗрдВ?", tone: "Shows surprise" },
            { sentence: "I need bread, milk, eggs... тЖС", hindi: "рдореБрдЭреЗ рд░реЛрдЯреА, рджреВрдз, рдЕрдВрдбреЗ рдЪрд╛рд╣рд┐рдП...", tone: "List continues" }
          ],
          tip: "Voice goes UP at the end. Sounds like a question or incomplete thought.",
          hindiTip: "рдЖрд╡рд╛рдЬрд╝ рдЕрдВрдд рдореЗрдВ рдКрдкрд░ рдЬрд╛рддреА рд╣реИред рдкреНрд░рд╢реНрди рдпрд╛ рдЕрдзреВрд░реЗ рд╡рд┐рдЪрд╛рд░ рдХреА рддрд░рд╣ рд▓рдЧрддреА рд╣реИред"
        },
        {
          pattern: "Compound Intonation тЖСтЖУ",
          usage: "Choice questions, contrasts",
          examples: [
            { sentence: "Do you want tea тЖС or coffee? тЖУ", hindi: "рдХреНрдпрд╛ рдЖрдк рдЪрд╛рдп рдЪрд╛рд╣рддреЗ рд╣реИрдВ рдпрд╛ рдХреЙрдлреА?", tone: "Up then down" },
            { sentence: "I like it, тЖС but it's expensive. тЖУ", hindi: "рдореБрдЭреЗ рдпрд╣ рдкрд╕рдВрдж рд╣реИ, рд▓реЗрдХрд┐рди рдпрд╣ рдорд╣рдВрдЧрд╛ рд╣реИред", tone: "Contrast" }
          ],
          tip: "First option rises, final option/answer falls.",
          hindiTip: "рдкрд╣рд▓рд╛ рд╡рд┐рдХрд▓реНрдк рдКрдкрд░ рдЬрд╛рддрд╛ рд╣реИ, рдЕрдВрддрд┐рдо рд╡рд┐рдХрд▓реНрдк/рдЙрддреНрддрд░ рдиреАрдЪреЗ рдЬрд╛рддрд╛ рд╣реИред"
        }
      ]
    },
    {
      id: 5,
      title: "Linking & Connected Speech (рд▓рд┐рдВрдХрд┐рдВрдЧ)",
      emoji: "ЁЯФЧ",
      color: "from-yellow-400 to-orange-500",
      difficulty: "hard",
      description: "Speak smoothly like native speakers",
      exercises: [
        {
          technique: "Consonant to Vowel Linking",
          rule: "Connect final consonant to next vowel",
          examples: [
            { written: "an apple", spoken: "a-napple", phonetic: "/╔Щn ╦И├жp╔Щl/", hindi: "рдПрдХ рд╕реЗрдм" },
            { written: "turn it on", spoken: "tur-ni-ton", phonetic: "/t╔Ь╦Рn ╔кt ╔Тn/", hindi: "рдЗрд╕реЗ рдЪрд╛рд▓реВ рдХрд░реЛ" },
            { written: "take it easy", spoken: "ta-ki-tea-sy", phonetic: "/te╔кk ╔кt ╦Иi╦Рzi/", hindi: "рдЖрд░рд╛рдо рдХрд░реЛ" }
          ],
          tip: "Don't pause between words. Final consonant 'jumps' to next word.",
          hindiTip: "рд╢рдмреНрджреЛрдВ рдХреЗ рдмреАрдЪ рд░реБрдХреЗрдВ рдирд╣реАрдВред рдЕрдВрддрд┐рдо рд╡реНрдпрдВрдЬрди рдЕрдЧрд▓реЗ рд╢рдмреНрдж рдореЗрдВ 'рдХреВрджрддрд╛' рд╣реИред"
        },
        {
          technique: "Vowel to Vowel Linking",
          rule: "Add /w/ or /j/ sound between vowels",
          examples: [
            { written: "go away", spoken: "go-w-away", phonetic: "/╔б╔Щ╩К w╔Щ╦Иwe╔к/", hindi: "рдЪрд▓реЗ рдЬрд╛рдУ", link: "/w/ sound" },
            { written: "see it", spoken: "see-y-it", phonetic: "/si╦Р j╔кt/", hindi: "рдЗрд╕реЗ рджреЗрдЦреЛ", link: "/j/ sound" },
            { written: "two apples", spoken: "two-w-apples", phonetic: "/tu╦Р w╦И├жp╔Щlz/", hindi: "рджреЛ рд╕реЗрдм", link: "/w/ sound" }
          ],
          tip: "Add tiny /w/ or /j/ glide to connect vowels smoothly.",
          hindiTip: "рд╕реНрд╡рд░реЛрдВ рдХреЛ рд╕реБрдЪрд╛рд░реВ рд░реВрдк рд╕реЗ рдЬреЛрдбрд╝рдиреЗ рдХреЗ рд▓рд┐рдП рдЫреЛрдЯрд╛ /w/ рдпрд╛ /j/ рдЬреЛрдбрд╝реЗрдВред"
        },
        {
          technique: "Elision - Dropping Sounds",
          rule: "Some sounds disappear in fast speech",
          examples: [
            { written: "next day", spoken: "nex day", phonetic: "/neks de╔к/", dropped: "/t/ dropped", hindi: "рдЕрдЧрд▓рд╛ рджрд┐рди" },
            { written: "must be", spoken: "mus be", phonetic: "/m╩Мs bi╦Р/", dropped: "/t/ dropped", hindi: "рд╣реЛрдирд╛ рдЪрд╛рд╣рд┐рдП" },
            { written: "probably", spoken: "probly", phonetic: "/╦Иpr╔Тbli/", dropped: "/╔Щ/ dropped", hindi: "рд╢рд╛рдпрдж" }
          ],
          tip: "Native speakers drop sounds for speed. Listen and imitate!",
          hindiTip: "рджреЗрд╢реА рд╡рдХреНрддрд╛ рдЧрддрд┐ рдХреЗ рд▓рд┐рдП рдзреНрд╡рдирд┐рдпрд╛рдБ рдЫреЛрдбрд╝ рджреЗрддреЗ рд╣реИрдВред рд╕реБрдиреЗрдВ рдФрд░ рдЕрдиреБрдХрд░рдг рдХрд░реЗрдВ!"
        }
      ]
    },
    {
      id: 6,
      title: "Rhythm & Timing (рд▓рдп рдФрд░ рд╕рдордп)",
      emoji: "ЁЯО╡",
      color: "from-pink-400 to-rose-500",
      difficulty: "hard",
      description: "Develop natural English rhythm",
      exercises: [
        {
          concept: "Content Words vs Function Words",
          rule: "Stress content words, reduce function words",
          examples: [
            { 
              sentence: "I WANT to GO to the STORE.",
              stressed: "WANT, GO, STORE",
              unstressed: "I, to, to, the",
              hindi: "рдореИрдВ рджреБрдХрд╛рди рдЬрд╛рдирд╛ рдЪрд╛рд╣рддрд╛ рд╣реВрдВред",
              pattern: "da-DA-da-DA-da-da-DA"
            },
            {
              sentence: "She's WORKing on a PROject for her BOSS.",
              stressed: "WORK, PRO, BOSS",
              unstressed: "She's, -ing, on, a, -ject, for, her",
              hindi: "рд╡рд╣ рдЕрдкрдиреЗ рдмреЙрд╕ рдХреЗ рд▓рд┐рдП рдПрдХ рдкреНрд░реЛрдЬреЗрдХреНрдЯ рдкрд░ рдХрд╛рдо рдХрд░ рд░рд╣реА рд╣реИред",
              pattern: "da-DA-da-da-DA-da-da-da-DA"
            }
          ],
          tip: "Content words = nouns, verbs, adjectives. Function words = articles, prepositions.",
          hindiTip: "рд╕рд╛рдордЧреНрд░реА рд╢рдмреНрдж = рд╕рдВрдЬреНрдЮрд╛, рдХреНрд░рд┐рдпрд╛, рд╡рд┐рд╢реЗрд╖рдгред рдХрд╛рд░реНрдп рд╢рдмреНрдж = рд▓реЗрдЦ, рдкреВрд░реНрд╡рд╕рд░реНрдЧред"
        },
        {
          concept: "Stress-Timed Rhythm",
          rule: "Equal time between stressed syllables",
          examples: [
            { 
              phrase: "CATS eat FISH.",
              timing: "1 beat - 1 beat - 1 beat",
              hindi: "рдмрд┐рд▓реНрд▓рд┐рдпрд╛рдБ рдордЫрд▓реА рдЦрд╛рддреА рд╣реИрдВред"
            },
            {
              phrase: "The CATS are EATing the FISH.",
              timing: "1 beat - 1 beat - 1 beat",
              unstressed: "The, are, -ing, the (squeezed between beats)",
              hindi: "рдмрд┐рд▓реНрд▓рд┐рдпрд╛рдБ рдордЫрд▓реА рдЦрд╛ рд░рд╣реА рд╣реИрдВред"
            }
          ],
          tip: "Stressed syllables are like a drum beat - keep them evenly spaced!",
          hindiTip: "рдмрд▓рдпреБрдХреНрдд рдЕрдХреНрд╖рд░ рдбреНрд░рдо рдмреАрдЯ рдХреА рддрд░рд╣ рд╣реИрдВ - рдЙрдиреНрд╣реЗрдВ рд╕рдорд╛рди рд░реВрдк рд╕реЗ рд░рдЦреЗрдВ!"
        }
      ]
    }
  ];

  const toggleComplete = (id) => {
    if (completedLessons.includes(id)) {
      setCompletedLessons(completedLessons.filter(l => l !== id));
    } else {
      setCompletedLessons([...completedLessons, id]);
    }
  };

  return (
    <div className={`min-h-screen ${darkMode ? 'bg-gradient-to-br from-[#0a0e27] to-[#1a1d3a]' : 'bg-gradient-to-br from-[#e8f5e9] via-[#e1f5fe] to-[#f3e5f5]'} transition-colors duration-500`}>
      <header className={`sticky top-0 z-50 ${darkMode ? 'bg-[#0f1729]/90' : 'bg-white/80'} backdrop-blur-lg border-b ${darkMode ? 'border-[#2a3441]' : 'border-gray-200'} transition-colors duration-500`}>
        <div className="max-w-7xl mx-auto px-4 sm:px-6 md:px-12 py-4 flex justify-between items-center">
          <button 
            onClick={() => navigate('/hard-level')}
            className={`flex items-center gap-2 ${darkMode ? 'text-[#60a5fa] hover:text-[#3b82f6]' : 'text-[#1976d2] hover:text-[#1565c0]'} font-semibold transition-all hover:scale-105`}
          >
            <span className="text-xl">тЖР</span>
            <span>Back to Topics</span>
          </button>
          
          <div className="flex items-center gap-3">
            <div className={`hidden sm:flex items-center gap-2 ${darkMode ? 'bg-[#1e293b]' : 'bg-blue-100'} px-4 py-2 rounded-full`}>
              <span className="text-xl">ЁЯзСтАНЁЯПл</span>
              <span className={`font-semibold ${darkMode ? 'text-[#60a5fa]' : 'text-blue-600'}`}>
                {completedLessons.length}/{lessons.length}
              </span>
            </div>
            <button 
              onClick={() => setDarkMode(!darkMode)}
              className={`${darkMode ? 'bg-[#60a5fa] hover:bg-[#3b82f6]' : 'bg-[#1976d2] hover:bg-[#1565c0]'} text-white p-2.5 rounded-full transition-all duration-300 hover:scale-110 shadow-lg`}
            >
              {darkMode ? 'тШАя╕П' : 'ЁЯМЩ'}
            </button>
          </div>
        </div>
      </header>

      <section className="max-w-7xl mx-auto px-4 sm:px-6 md:px-12 py-8 sm:py-12">
        <div className="text-center mb-8">
          <div className="text-6xl mb-4">ЁЯзСтАНЁЯПл</div>
          <h1 className={`text-3xl sm:text-4xl md:text-5xl font-bold ${darkMode ? 'text-white' : 'text-gray-900'} mb-3`}>
            Accent & Intonation Training
          </h1>
          <p className={`text-base sm:text-lg ${darkMode ? 'text-[#94a3b8]' : 'text-gray-600'} max-w-2xl mx-auto`}>
            Perfect your pronunciation and speak with natural rhythm
          </p>
        </div>

        <div className="grid gap-4 sm:grid-cols-2 lg:grid-cols-3">
          {lessons.map((lesson) => (
            <div
              key={lesson.id}
              onClick={() => setSelectedLesson(lesson)}
              className={`group cursor-pointer rounded-2xl overflow-hidden ${
                darkMode ? 'bg-[#1e293b]/50 border-2 border-[#374151]' : 'bg-white border-2 border-gray-200'
              } transition-all duration-300 hover:scale-105 hover:shadow-xl ${
                darkMode ? 'hover:border-[#60a5fa]' : 'hover:border-blue-400'
              } ${completedLessons.includes(lesson.id) ? 'opacity-60' : ''}`}
            >
              <div className={`bg-gradient-to-br ${lesson.color} p-4 text-white`}>
                <div className="flex justify-between items-start mb-2">
                  <span className="text-3xl">{lesson.emoji}</span>
                  <button
                    onClick={(e) => {
                      e.stopPropagation();
                      toggleComplete(lesson.id);
                    }}
                    className={`${completedLessons.includes(lesson.id) ? 'bg-white text-green-600' : 'bg-white/20'} p-1.5 rounded-full hover:scale-110 transition-all`}
                  >
                    {completedLessons.includes(lesson.id) ? 'тЬУ' : 'тЧЛ'}
                  </button>
                </div>
                <h3 className="text-xl font-bold mb-1">{lesson.title}</h3>
                <p className="text-sm opacity-90">{lesson.description}</p>
              </div>
              <div className="p-4">
                <div className="flex justify-between items-center mb-3">
                  <span className={`text-xs font-semibold ${darkMode ? 'text-red-400' : 'text-red-600'} uppercase`}>
                    {lesson.difficulty}
                  </span>
                  <span className={`text-xs ${darkMode ? 'text-[#94a3b8]' : 'text-gray-600'}`}>
                    {lesson.exercises.length} exercises
                  </span>
                </div>
                <span className={`text-xs ${darkMode ? 'text-[#60a5fa]' : 'text-blue-600'} font-semibold`}>
                  Click to practice тЖТ
                </span>
              </div>
            </div>
          ))}
        </div>
      </section>

      {selectedLesson && (
        <div 
          className="fixed inset-0 bg-black/60 backdrop-blur-sm z-50 flex items-center justify-center p-4"
          onClick={() => setSelectedLesson(null)}
        >
          <div 
            className={`${darkMode ? 'bg-[#1e293b]' : 'bg-white'} rounded-3xl max-w-4xl w-full max-h-[90vh] overflow-y-auto`}
            onClick={(e) => e.stopPropagation()}
          >
            <div className={`bg-gradient-to-br ${selectedLesson.color} p-8 text-white text-center sticky top-0`}>
              <div className="text-6xl mb-4">{selectedLesson.emoji}</div>
              <h2 className="text-3xl font-bold mb-2">{selectedLesson.title}</h2>
              <p className="text-sm opacity-90">{selectedLesson.description}</p>
            </div>
            <div className="p-8">
              {selectedLesson.exercises.map((exercise, idx) => (
                <div key={idx} className={`${darkMode ? 'bg-[#0f1729]' : 'bg-gray-50'} p-6 rounded-xl mb-6`}>
                  <h3 className={`text-xl font-bold ${darkMode ? 'text-[#e0e7ff]' : 'text-gray-900'} mb-3`}>
                    {exercise.sound || exercise.cluster || exercise.pattern || exercise.technique || exercise.concept}
                  </h3>
                  {exercise.rule && (
                    <p className={`${darkMode ? 'text-[#60a5fa]' : 'text-blue-600'} text-sm font-semibold mb-3`}>
                      ЁЯУМ {exercise.rule}
                    </p>
                  )}
                  {exercise.usage && (
                    <p className={`${darkMode ? 'text-[#60a5fa]' : 'text-blue-600'} text-sm font-semibold mb-3`}>
                      ЁЯУМ Usage: {exercise.usage}
                    </p>
                  )}
                  <div className="space-y-3 mb-4">
                    {exercise.examples.map((ex, i) => (
                      <div key={i} className={`${darkMode ? 'bg-[#1e293b]' : 'bg-white'} p-4 rounded-lg`}>
                        <p className={`text-lg font-bold ${darkMode ? 'text-[#e0e7ff]' : 'text-gray-900'} mb-1`}>
                          {ex.word || ex.sentence || ex.written || ex.phrase}
                        </p>
                        {ex.phonetic && (
                          <p className={`text-sm ${darkMode ? 'text-[#94a3b8]' : 'text-gray-600'} font-mono mb-1`}>
                            {ex.phonetic}
                          </p>
                        )}
                        {ex.spoken && (
                          <p className={`text-sm ${darkMode ? 'text-[#60a5fa]' : 'text-blue-600'} mb-1`}>
                            Spoken: {ex.spoken}
                          </p>
                        )}
                        {ex.hindi && (
                          <p className={`text-sm ${darkMode ? 'text-[#94a3b8]' : 'text-gray-600'}`}>
                            Hindi: {ex.hindi}
                          </p>
                        )}
                        {ex.contrast && (
                          <p className={`text-sm ${darkMode ? 'text-orange-400' : 'text-orange-600'} mt-1`}>
                            тЖФ {ex.contrast}
                          </p>
                        )}
                        {ex.type && (
                          <p className={`text-xs ${darkMode ? 'text-[#60a5fa]' : 'text-blue-600'} mt-1`}>
                            {ex.type}
                          </p>
                        )}
                        {ex.stressed && (
                          <p className={`text-xs ${darkMode ? 'text-green-400' : 'text-green-600'} mt-1`}>
                            Stress: {ex.stressed}
                          </p>
                        )}
                      </div>
                    ))}
                  </div>
                  <div className={`${darkMode ? 'bg-[#1e293b]' : 'bg-blue-50'} p-4 rounded-lg`}>
                    <p className={`text-sm ${darkMode ? 'text-[#e0e7ff]' : 'text-gray-900'} mb-2`}>
                      ЁЯТб {exercise.tip}
                    </p>
                    <p className={`text-sm ${darkMode ? 'text-[#94a3b8]' : 'text-gray-600'}`}>
                      {exercise.hindiTip}
                    </p>
                  </div>
                </div>
              ))}

              <button
                onClick={() => {
                  toggleComplete(selectedLesson.id);
                  setSelectedLesson(null);
                }}
                className={`w-full ${
                  completedLessons.includes(selectedLesson.id)
                    ? 'bg-green-600 hover:bg-green-700'
                    : `bg-gradient-to-r ${selectedLesson.color}`
                } text-white font-bold py-4 rounded-full transition-all hover:scale-105`}
              >
                {completedLessons.includes(selectedLesson.id) ? 'тЬУ Marked as Completed' : 'Mark as Completed'}
              </button>
            </div>
          </div>
        </div>
      )}
    </div>
  );
}
