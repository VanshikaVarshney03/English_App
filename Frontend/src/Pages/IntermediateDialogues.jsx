import React, { useState } from "react";
import { useNavigate } from 'react-router-dom';

export default function IntermediateDialogues() {
  const navigate = useNavigate();
  const [darkMode, setDarkMode] = useState(false);
  const [selectedDialogue, setSelectedDialogue] = useState(null);
  const [completedDialogues, setCompletedDialogues] = useState([]);

  const dialogues = [
    {
      id: 1,
      title: "Job Interview",
      emoji: "ЁЯТ╝",
      color: "from-blue-400 to-indigo-500",
      difficulty: "medium",
      scenario: "Professional interview at a tech company",
      dialogue: [
        { speaker: "Interviewer", text: "Tell me about yourself and your experience.", hindi: "рдЕрдкрдиреЗ рдмрд╛рд░реЗ рдореЗрдВ рдФрд░ рдЕрдкрдиреЗ рдЕрдиреБрднрд╡ рдХреЗ рдмрд╛рд░реЗ рдореЗрдВ рдмрддрд╛рдЗрдПред" },
        { speaker: "Candidate", text: "I have 3 years of experience in software development, specializing in React and Node.js.", hindi: "рдореЗрд░реЗ рдкрд╛рд╕ рд╕реЙрдлреНрдЯрд╡реЗрдпрд░ рдбреЗрд╡рд▓рдкрдореЗрдВрдЯ рдореЗрдВ 3 рд╕рд╛рд▓ рдХрд╛ рдЕрдиреБрднрд╡ рд╣реИ, рд░рд┐рдПрдХреНрдЯ рдФрд░ рдиреЛрдб.рдЬреЗрдПрд╕ рдореЗрдВ рд╡рд┐рд╢реЗрд╖рдЬреНрдЮрддрд╛ред" },
        { speaker: "Interviewer", text: "What are your strengths and weaknesses?", hindi: "рдЖрдкрдХреА рддрд╛рдХрдд рдФрд░ рдХрдордЬреЛрд░рд┐рдпрд╛рдВ рдХреНрдпрд╛ рд╣реИрдВ?" },
        { speaker: "Candidate", text: "My strength is problem-solving. As for weakness, I sometimes focus too much on details.", hindi: "рдореЗрд░реА рддрд╛рдХрдд рд╕рдорд╕реНрдпрд╛-рд╕рдорд╛рдзрд╛рди рд╣реИред рдХрдордЬреЛрд░реА рдХреЗ рд▓рд┐рдП, рдореИрдВ рдХрднреА-рдХрднреА рд╡рд┐рд╡рд░рдг рдкрд░ рдмрд╣реБрдд рдЕрдзрд┐рдХ рдзреНрдпрд╛рди рдХреЗрдВрджреНрд░рд┐рдд рдХрд░рддрд╛ рд╣реВрдВред" },
        { speaker: "Interviewer", text: "Why do you want to work here?", hindi: "рдЖрдк рдпрд╣рд╛рдВ рдХреНрдпреЛрдВ рдХрд╛рдо рдХрд░рдирд╛ рдЪрд╛рд╣рддреЗ рд╣реИрдВ?" },
        { speaker: "Candidate", text: "I admire your company's innovation and would love to contribute to your team.", hindi: "рдореИрдВ рдЖрдкрдХреА рдХрдВрдкрдиреА рдХреЗ рдирд╡рд╛рдЪрд╛рд░ рдХреА рдкреНрд░рд╢рдВрд╕рд╛ рдХрд░рддрд╛ рд╣реВрдВ рдФрд░ рдЖрдкрдХреА рдЯреАрдо рдореЗрдВ рдпреЛрдЧрджрд╛рди рджреЗрдирд╛ рдкрд╕рдВрдж рдХрд░реВрдВрдЧрд╛ред" },
      ],
      keyPhrases: ["Tell me about yourself", "Strengths and weaknesses", "Why do you want to work here?"]
    },
    {
      id: 2,
      title: "Business Meeting",
      emoji: "ЁЯУК",
      color: "from-green-400 to-teal-500",
      difficulty: "hard",
      scenario: "Discussing project deadlines with team",
      dialogue: [
        { speaker: "Manager", text: "Let's discuss the Q4 project timeline. Are we on track?", hindi: "рдЪрд▓рд┐рдП Q4 рдкреНрд░реЛрдЬреЗрдХреНрдЯ рдЯрд╛рдЗрдорд▓рд╛рдЗрди рдкрд░ рдЪрд░реНрдЪрд╛ рдХрд░рддреЗ рд╣реИрдВред рдХреНрдпрд╛ рд╣рдо рдЯреНрд░реИрдХ рдкрд░ рд╣реИрдВ?" },
        { speaker: "Team Lead", text: "We're slightly behind schedule due to resource constraints.", hindi: "рд╕рдВрд╕рд╛рдзрди рдХреА рдХрдореА рдХреЗ рдХрд╛рд░рдг рд╣рдо рд╢реЗрдбреНрдпреВрд▓ рд╕реЗ рдереЛрдбрд╝рд╛ рдкреАрдЫреЗ рд╣реИрдВред" },
        { speaker: "Manager", text: "What do you need to get back on track?", hindi: "рдЯреНрд░реИрдХ рдкрд░ рд╡рд╛рдкрд╕ рдЖрдиреЗ рдХреЗ рд▓рд┐рдП рдЖрдкрдХреЛ рдХреНрдпрд╛ рдЪрд╛рд╣рд┐рдП?" },
        { speaker: "Team Lead", text: "We need two more developers and extended deadline by two weeks.", hindi: "рд╣рдореЗрдВ рджреЛ рдФрд░ рдбреЗрд╡рд▓рдкрд░реНрд╕ рдФрд░ рджреЛ рд╕рдкреНрддрд╛рд╣ рдХреА рд╡рд┐рд╕реНрддрд╛рд░рд┐рдд рд╕рдордп рд╕реАрдорд╛ рдЪрд╛рд╣рд┐рдПред" },
        { speaker: "Manager", text: "I'll arrange for additional resources. Let's reconvene next Monday.", hindi: "рдореИрдВ рдЕрддрд┐рд░рд┐рдХреНрдд рд╕рдВрд╕рд╛рдзрдиреЛрдВ рдХреА рд╡реНрдпрд╡рд╕реНрдерд╛ рдХрд░реВрдВрдЧрд╛ред рдЕрдЧрд▓реЗ рд╕реЛрдорд╡рд╛рд░ рдХреЛ рдлрд┐рд░ рд╕реЗ рдорд┐рд▓рддреЗ рд╣реИрдВред" },
      ],
      keyPhrases: ["On track", "Resource constraints", "Extended deadline", "Reconvene"]
    },
    {
      id: 3,
      title: "Customer Complaint",
      emoji: "ЁЯУЮ",
      color: "from-orange-400 to-red-500",
      difficulty: "medium",
      scenario: "Handling an upset customer professionally",
      dialogue: [
        { speaker: "Customer", text: "I ordered this product a week ago and it still hasn't arrived!", hindi: "рдореИрдВрдиреЗ рдпрд╣ рдЙрддреНрдкрд╛рдж рдПрдХ рд╕рдкреНрддрд╛рд╣ рдкрд╣рд▓реЗ рдСрд░реНрдбрд░ рдХрд┐рдпрд╛ рдерд╛ рдФрд░ рдпрд╣ рдЕрднреА рддрдХ рдирд╣реАрдВ рдЖрдпрд╛!" },
        { speaker: "Support", text: "I sincerely apologize for the inconvenience. Let me check your order status.", hindi: "рдЕрд╕реБрд╡рд┐рдзрд╛ рдХреЗ рд▓рд┐рдП рдореИрдВ рдИрдорд╛рдирджрд╛рд░реА рд╕реЗ рдХреНрд╖рдорд╛ рдЪрд╛рд╣рддрд╛ рд╣реВрдВред рдореБрдЭреЗ рдЖрдкрдХреЗ рдСрд░реНрдбрд░ рдХреА рд╕реНрдерд┐рддрд┐ рдЬрд╛рдВрдЪрдиреЗ рджреЗрдВред" },
        { speaker: "Customer", text: "This is unacceptable! I needed it urgently.", hindi: "рдпрд╣ рдЕрд╕реНрд╡реАрдХрд╛рд░реНрдп рд╣реИ! рдореБрдЭреЗ рдЗрд╕рдХреА рддрддреНрдХрд╛рд▓ рдЖрд╡рд╢реНрдпрдХрддрд╛ рдереАред" },
        { speaker: "Support", text: "I completely understand your frustration. I'll personally ensure it's shipped today with express delivery.", hindi: "рдореИрдВ рдЖрдкрдХреА рдирд┐рд░рд╛рд╢рд╛ рдХреЛ рдкреВрд░реА рддрд░рд╣ рд╕реЗ рд╕рдордЭрддрд╛ рд╣реВрдВред рдореИрдВ рд╡реНрдпрдХреНрддрд┐рдЧрдд рд░реВрдк рд╕реЗ рд╕реБрдирд┐рд╢реНрдЪрд┐рдд рдХрд░реВрдВрдЧрд╛ рдХрд┐ рдпрд╣ рдЖрдЬ рдПрдХреНрд╕рдкреНрд░реЗрд╕ рдбрд┐рд▓реАрд╡рд░реА рдХреЗ рд╕рд╛рде рднреЗрдЬрд╛ рдЬрд╛рдПред" },
        { speaker: "Customer", text: "Alright, I appreciate your help. Please make sure it arrives tomorrow.", hindi: "рдареАрдХ рд╣реИ, рдореИрдВ рдЖрдкрдХреА рдорджрдж рдХреА рд╕рд░рд╛рд╣рдирд╛ рдХрд░рддрд╛ рд╣реВрдВред рдХреГрдкрдпрд╛ рд╕реБрдирд┐рд╢реНрдЪрд┐рдд рдХрд░реЗрдВ рдХрд┐ рдпрд╣ рдХрд▓ рдЖрдПред" },
      ],
      keyPhrases: ["I sincerely apologize", "I understand your frustration", "I'll personally ensure"]
    },
    {
      id: 4,
      title: "Negotiating Salary",
      emoji: "ЁЯТ░",
      color: "from-purple-400 to-pink-500",
      difficulty: "hard",
      scenario: "Discussing compensation package",
      dialogue: [
        { speaker: "HR", text: "Based on your experience, we're offering 15 lakhs per annum.", hindi: "рдЖрдкрдХреЗ рдЕрдиреБрднрд╡ рдХреЗ рдЖрдзрд╛рд░ рдкрд░, рд╣рдо рдкреНрд░рддрд┐ рд╡рд░реНрд╖ 15 рд▓рд╛рдЦ рдХреА рдкреЗрд╢рдХрд╢ рдХрд░ рд░рд╣реЗ рд╣реИрдВред" },
        { speaker: "Candidate", text: "I appreciate the offer. However, given my 5 years of experience and specialized skills, I was expecting around 18 lakhs.", hindi: "рдореИрдВ рдкреНрд░рд╕реНрддрд╛рд╡ рдХреА рд╕рд░рд╛рд╣рдирд╛ рдХрд░рддрд╛ рд╣реВрдВред рд╣рд╛рд▓рд╛рдБрдХрд┐, рдореЗрд░реЗ 5 рд╕рд╛рд▓ рдХреЗ рдЕрдиреБрднрд╡ рдФрд░ рд╡рд┐рд╢реЗрд╖ рдХреМрд╢рд▓ рдХреЛ рджреЗрдЦрддреЗ рд╣реБрдП, рдореБрдЭреЗ рд▓рдЧрднрдЧ 18 рд▓рд╛рдЦ рдХреА рдЙрдореНрдореАрдж рдереАред" },
        { speaker: "HR", text: "I understand. Let me discuss this with management. What are your other expectations?", hindi: "рдореИрдВ рд╕рдордЭрддрд╛ рд╣реВрдВред рдореБрдЭреЗ рдЗрд╕ рдкрд░ рдкреНрд░рдмрдВрдзрди рд╕реЗ рдЪрд░реНрдЪрд╛ рдХрд░рдиреЗ рджреЗрдВред рдЖрдкрдХреА рдЕрдиреНрдп рдЕрдкреЗрдХреНрд╖рд╛рдПрдБ рдХреНрдпрд╛ рд╣реИрдВ?" },
        { speaker: "Candidate", text: "Apart from salary, I'm also looking for performance bonuses and flexible work hours.", hindi: "рд╡реЗрддрди рдХреЗ рдЕрд▓рд╛рд╡рд╛, рдореИрдВ рдкреНрд░рджрд░реНрд╢рди рдмреЛрдирд╕ рдФрд░ рд▓рдЪреАрд▓реЗ рдХрд╛рдо рдХреЗ рдШрдВрдЯреЗ рднреА рддрд▓рд╛рд╢ рд░рд╣рд╛ рд╣реВрдВред" },
        { speaker: "HR", text: "We can accommodate flexible hours and quarterly bonuses. Let me get back to you on the salary revision.", hindi: "рд╣рдо рд▓рдЪреАрд▓реЗ рдШрдВрдЯреЛрдВ рдФрд░ рддреНрд░реИрдорд╛рд╕рд┐рдХ рдмреЛрдирд╕ рдХреЛ рд╕рдорд╛рдпреЛрдЬрд┐рдд рдХрд░ рд╕рдХрддреЗ рд╣реИрдВред рдореБрдЭреЗ рд╡реЗрддрди рд╕рдВрд╢реЛрдзрди рдкрд░ рдЖрдкрдХреЗ рдкрд╛рд╕ рд╡рд╛рдкрд╕ рдЖрдиреЗ рджреЗрдВред" },
      ],
      keyPhrases: ["I appreciate the offer", "Given my experience", "Let me discuss this", "Get back to you"]
    },
    {
      id: 5,
      title: "Networking Event",
      emoji: "ЁЯдЭ",
      color: "from-cyan-400 to-blue-500",
      difficulty: "medium",
      scenario: "Professional networking at a conference",
      dialogue: [
        { speaker: "Person A", text: "Hi! I'm Priya from Google. What brings you to this conference?", hindi: "рдирдорд╕реНрддреЗ! рдореИрдВ рдЧреВрдЧрд▓ рд╕реЗ рдкреНрд░рд┐рдпрд╛ рд╣реВрдВред рдЖрдк рдЗрд╕ рд╕рдореНрдореЗрд▓рди рдореЗрдВ рдХреНрдпреЛрдВ рдЖрдП рд╣реИрдВ?" },
        { speaker: "Person B", text: "Hello! I'm Arjun, working in AI research at Microsoft. I'm here to learn about latest trends.", hindi: "рдирдорд╕реНрддреЗ! рдореИрдВ рдЕрд░реНрдЬреБрди рд╣реВрдВ, рдорд╛рдЗрдХреНрд░реЛрд╕реЙрдлреНрдЯ рдореЗрдВ AI рд░рд┐рд╕рд░реНрдЪ рдореЗрдВ рдХрд╛рдо рдХрд░ рд░рд╣рд╛ рд╣реВрдВред рдореИрдВ рдирд╡реАрдирддрдо рд░реБрдЭрд╛рдиреЛрдВ рдХреЗ рдмрд╛рд░реЗ рдореЗрдВ рдЬрд╛рдирдиреЗ рдХреЗ рд▓рд┐рдП рдпрд╣рд╛рдВ рд╣реВрдВред" },
        { speaker: "Person A", text: "That's interesting! We're also exploring AI solutions. Would you like to exchange contact details?", hindi: "рдпрд╣ рджрд┐рд▓рдЪрд╕реНрдк рд╣реИ! рд╣рдо рднреА AI рд╕рдорд╛рдзрд╛рдиреЛрдВ рдХреА рдЦреЛрдЬ рдХрд░ рд░рд╣реЗ рд╣реИрдВред рдХреНрдпрд╛ рдЖрдк рд╕рдВрдкрд░реНрдХ рд╡рд┐рд╡рд░рдг рдХрд╛ рдЖрджрд╛рди-рдкреНрд░рджрд╛рди рдХрд░рдирд╛ рдЪрд╛рд╣реЗрдВрдЧреЗ?" },
        { speaker: "Person B", text: "Absolutely! Here's my card. Let's stay in touch.", hindi: "рдмрд┐рд▓реНрдХреБрд▓! рдпрд╣ рдореЗрд░рд╛ рдХрд╛рд░реНрдб рд╣реИред рдЖрдЗрдП рд╕рдВрдкрд░реНрдХ рдореЗрдВ рд░рд╣реЗрдВред" },
        { speaker: "Person A", text: "Great! I'll reach out next week to discuss potential collaboration.", hindi: "рдмрдврд╝рд┐рдпрд╛! рдореИрдВ рд╕рдВрднрд╛рд╡рд┐рдд рд╕рд╣рдпреЛрдЧ рдкрд░ рдЪрд░реНрдЪрд╛ рдХрд░рдиреЗ рдХреЗ рд▓рд┐рдП рдЕрдЧрд▓реЗ рд╕рдкреНрддрд╛рд╣ рд╕рдВрдкрд░реНрдХ рдХрд░реВрдВрдЧрд╛ред" },
      ],
      keyPhrases: ["What brings you here?", "Exchange contact details", "Stay in touch", "Potential collaboration"]
    },
    {
      id: 6,
      title: "Apartment Viewing",
      emoji: "ЁЯПа",
      color: "from-yellow-400 to-orange-500",
      difficulty: "medium",
      scenario: "Discussing rental apartment details",
      dialogue: [
        { speaker: "Agent", text: "This is a 2BHK apartment with all modern amenities. The rent is 25,000 per month.", hindi: "рдпрд╣ рд╕рднреА рдЖрдзреБрдирд┐рдХ рд╕реБрд╡рд┐рдзрд╛рдУрдВ рдХреЗ рд╕рд╛рде рдПрдХ 2BHK рдЕрдкрд╛рд░реНрдЯрдореЗрдВрдЯ рд╣реИред рдХрд┐рд░рд╛рдпрд╛ рдкреНрд░рддрд┐ рдорд╛рд╣ 25,000 рд╣реИред" },
        { speaker: "Client", text: "Is the maintenance included in the rent?", hindi: "рдХреНрдпрд╛ рдХрд┐рд░рд╛рдП рдореЗрдВ рд░рдЦрд░рдЦрд╛рд╡ рд╢рд╛рдорд┐рд▓ рд╣реИ?" },
        { speaker: "Agent", text: "No, maintenance is separate - about 2,000 per month. It includes water, security, and common area upkeep.", hindi: "рдирд╣реАрдВ, рд░рдЦрд░рдЦрд╛рд╡ рдЕрд▓рдЧ рд╣реИ - рд▓рдЧрднрдЧ 2,000 рдкреНрд░рддрд┐ рдорд╛рд╣ред рдЗрд╕рдореЗрдВ рдкрд╛рдиреА, рд╕реБрд░рдХреНрд╖рд╛ рдФрд░ рд╕рд╛рдорд╛рдиреНрдп рдХреНрд╖реЗрддреНрд░ рдХрд╛ рд░рдЦрд░рдЦрд╛рд╡ рд╢рд╛рдорд┐рд▓ рд╣реИред" },
        { speaker: "Client", text: "What about parking? And is it pet-friendly?", hindi: "рдкрд╛рд░реНрдХрд┐рдВрдЧ рдХреЗ рдмрд╛рд░реЗ рдореЗрдВ рдХреНрдпрд╛? рдФрд░ рдХреНрдпрд╛ рдпрд╣ рдкрд╛рд▓рддреВ рдЬрд╛рдирд╡рд░реЛрдВ рдХреЗ рдЕрдиреБрдХреВрд▓ рд╣реИ?" },
        { speaker: "Agent", text: "Yes, one covered parking is included. Pets are allowed with prior approval from society.", hindi: "рд╣рд╛рдВ, рдПрдХ рдХрд╡рд░реНрдб рдкрд╛рд░реНрдХрд┐рдВрдЧ рд╢рд╛рдорд┐рд▓ рд╣реИред рд╕рдорд╛рдЬ рдХреА рдкреВрд░реНрд╡ рд╕реНрд╡реАрдХреГрддрд┐ рдХреЗ рд╕рд╛рде рдкрд╛рд▓рддреВ рдЬрд╛рдирд╡рд░реЛрдВ рдХреА рдЕрдиреБрдорддрд┐ рд╣реИред" },
      ],
      keyPhrases: ["Is it included?", "What about...?", "Pet-friendly", "Prior approval"]
    },
    {
      id: 7,
      title: "Medical Consultation",
      emoji: "ЁЯй║",
      color: "from-red-400 to-pink-500",
      difficulty: "medium",
      scenario: "Detailed health discussion with doctor",
      dialogue: [
        { speaker: "Doctor", text: "What symptoms have you been experiencing?", hindi: "рдЖрдк рдХрд┐рди рд▓рдХреНрд╖рдгреЛрдВ рдХрд╛ рдЕрдиреБрднрд╡ рдХрд░ рд░рд╣реЗ рд╣реИрдВ?" },
        { speaker: "Patient", text: "I've had persistent headaches and fatigue for the past two weeks.", hindi: "рдкрд┐рдЫрд▓реЗ рджреЛ рд╣рдлреНрддреЛрдВ рд╕реЗ рдореБрдЭреЗ рд▓рдЧрд╛рддрд╛рд░ рд╕рд┐рд░рджрд░реНрдж рдФрд░ рдердХрд╛рди рд╣реЛ рд░рд╣реА рд╣реИред" },
        { speaker: "Doctor", text: "Have you noticed any other symptoms? Changes in appetite or sleep pattern?", hindi: "рдХреНрдпрд╛ рдЖрдкрдиреЗ рдХреЛрдИ рдЕрдиреНрдп рд▓рдХреНрд╖рдг рджреЗрдЦреЗ рд╣реИрдВ? рднреВрдЦ рдпрд╛ рдиреАрдВрдж рдХреЗ рдкреИрдЯрд░реНрди рдореЗрдВ рдмрджрд▓рд╛рд╡?" },
        { speaker: "Patient", text: "Yes, I haven't been sleeping well and my appetite has decreased.", hindi: "рд╣рд╛рдВ, рдореИрдВ рдареАрдХ рд╕реЗ рд╕реЛ рдирд╣реАрдВ рдкрд╛ рд░рд╣рд╛ рд╣реВрдВ рдФрд░ рдореЗрд░реА рднреВрдЦ рдХрдо рд╣реЛ рдЧрдИ рд╣реИред" },
        { speaker: "Doctor", text: "I'd recommend some blood tests to rule out any deficiencies. Meanwhile, try to reduce stress and maintain regular sleep schedule.", hindi: "рдореИрдВ рдХрд┐рд╕реА рднреА рдХрдореА рдХреЛ рджреВрд░ рдХрд░рдиреЗ рдХреЗ рд▓рд┐рдП рдХреБрдЫ рд░рдХреНрдд рдкрд░реАрдХреНрд╖рдгреЛрдВ рдХреА рд╕рд┐рдлрд╛рд░рд┐рд╢ рдХрд░реВрдВрдЧрд╛ред рдЗрд╕ рдмреАрдЪ, рддрдирд╛рд╡ рдХрдо рдХрд░рдиреЗ рдФрд░ рдирд┐рдпрдорд┐рдд рдиреАрдВрдж рдХреА рджрд┐рдирдЪрд░реНрдпрд╛ рдмрдирд╛рдП рд░рдЦрдиреЗ рдХрд╛ рдкреНрд░рдпрд╛рд╕ рдХрд░реЗрдВред" },
      ],
      keyPhrases: ["Persistent symptoms", "Rule out", "I'd recommend", "Meanwhile"]
    },
    {
      id: 8,
      title: "Travel Planning",
      emoji: "тЬИя╕П",
      color: "from-teal-400 to-green-500",
      difficulty: "medium",
      scenario: "Planning vacation with travel agent",
      dialogue: [
        { speaker: "Agent", text: "Where would you like to travel and for how long?", hindi: "рдЖрдк рдХрд╣рд╛рдВ рдпрд╛рддреНрд░рд╛ рдХрд░рдирд╛ рдЪрд╛рд╣реЗрдВрдЧреЗ рдФрд░ рдХрд┐рддрдиреЗ рд╕рдордп рдХреЗ рд▓рд┐рдП?" },
        { speaker: "Client", text: "I'm planning a week-long trip to Europe, preferably visiting Paris and Rome.", hindi: "рдореИрдВ рдпреВрд░реЛрдк рдХреА рдПрдХ рд╕рдкреНрддрд╛рд╣ рд▓рдВрдмреА рдпрд╛рддреНрд░рд╛ рдХреА рдпреЛрдЬрдирд╛ рдмрдирд╛ рд░рд╣рд╛ рд╣реВрдВ, рдЕрдзрд┐рдорд╛рдирддрдГ рдкреЗрд░рд┐рд╕ рдФрд░ рд░реЛрдо рдЬрд╛ рд░рд╣рд╛ рд╣реВрдВред" },
        { speaker: "Agent", text: "Excellent choice! What's your budget and preferred travel dates?", hindi: "рдЙрддреНрдХреГрд╖реНрдЯ рд╡рд┐рдХрд▓реНрдк! рдЖрдкрдХрд╛ рдмрдЬрдЯ рдФрд░ рдкрд╕рдВрджреАрджрд╛ рдпрд╛рддреНрд░рд╛ рддрд┐рдерд┐рдпрд╛рдВ рдХреНрдпрд╛ рд╣реИрдВ?" },
        { speaker: "Client", text: "Around 2 lakhs for two people. I'm flexible with dates, but preferably in September.", hindi: "рджреЛ рд▓реЛрдЧреЛрдВ рдХреЗ рд▓рд┐рдП рд▓рдЧрднрдЧ 2 рд▓рд╛рдЦред рдореИрдВ рддрд╛рд░реАрдЦреЛрдВ рдХреЗ рд╕рд╛рде рд▓рдЪреАрд▓рд╛ рд╣реВрдВ, рд▓реЗрдХрд┐рди рдЕрдзрд┐рдорд╛рдирддрдГ рд╕рд┐рддрдВрдмрд░ рдореЗрдВред" },
        { speaker: "Agent", text: "Great! I'll prepare a detailed itinerary with flight options, hotels, and sightseeing packages.", hindi: "рдмрдврд╝рд┐рдпрд╛! рдореИрдВ рдлреНрд▓рд╛рдЗрдЯ рд╡рд┐рдХрд▓реНрдкреЛрдВ, рд╣реЛрдЯрд▓реЛрдВ рдФрд░ рджрд░реНрд╢рдиреАрдп рд╕реНрдерд▓реЛрдВ рдХреЗ рдкреИрдХреЗрдЬреЛрдВ рдХреЗ рд╕рд╛рде рдПрдХ рд╡рд┐рд╕реНрддреГрдд рдпрд╛рддреНрд░рд╛ рдХрд╛рд░реНрдпрдХреНрд░рдо рддреИрдпрд╛рд░ рдХрд░реВрдВрдЧрд╛ред" },
      ],
      keyPhrases: ["Preferably", "What's your budget?", "Flexible with dates", "Detailed itinerary"]
    },
    {
      id: 9,
      title: "Requesting Leave",
      emoji: "ЁЯУЕ",
      color: "from-indigo-400 to-purple-500",
      difficulty: "easy",
      scenario: "Professional leave request to manager",
      dialogue: [
        { speaker: "Employee", text: "Sir, I need to request leave for next week for a family emergency.", hindi: "рд╕рд░, рдореБрдЭреЗ рдПрдХ рдкрд╛рд░рд┐рд╡рд╛рд░рд┐рдХ рдЖрдкрд╛рддрдХрд╛рд▓ рдХреЗ рд▓рд┐рдП рдЕрдЧрд▓реЗ рд╕рдкреНрддрд╛рд╣ рдХреА рдЫреБрдЯреНрдЯреА рдХрд╛ рдЕрдиреБрд░реЛрдз рдХрд░рдирд╛ рд╣реИред" },
        { speaker: "Manager", text: "I understand. How many days do you need?", hindi: "рдореИрдВ рд╕рдордЭрддрд╛ рд╣реВрдВред рдЖрдкрдХреЛ рдХрд┐рддрдиреЗ рджрд┐рди рдЪрд╛рд╣рд┐рдП?" },
        { speaker: "Employee", text: "I'll need 3 days - from Monday to Wednesday. I've already briefed my team about ongoing projects.", hindi: "рдореБрдЭреЗ 3 рджрд┐рди рдЪрд╛рд╣рд┐рдП - рд╕реЛрдорд╡рд╛рд░ рд╕реЗ рдмреБрдзрд╡рд╛рд░ рддрдХред рдореИрдВрдиреЗ рдкрд╣рд▓реЗ рд╣реА рдЕрдкрдиреА рдЯреАрдо рдХреЛ рдЪрд▓ рд░рд╣реЗ рдкреНрд░реЛрдЬреЗрдХреНрдЯреНрд╕ рдХреЗ рдмрд╛рд░реЗ рдореЗрдВ рдЬрд╛рдирдХрд╛рд░реА рджреЗ рджреА рд╣реИред" },
        { speaker: "Manager", text: "That's good planning. Who will handle your responsibilities during your absence?", hindi: "рдпрд╣ рдЕрдЪреНрдЫреА рдпреЛрдЬрдирд╛ рд╣реИред рдЖрдкрдХреА рдЕрдиреБрдкрд╕реНрдерд┐рддрд┐ рдХреЗ рджреМрд░рд╛рди рдЖрдкрдХреА рдЬрд┐рдореНрдореЗрджрд╛рд░рд┐рдпреЛрдВ рдХреЛ рдХреМрди рд╕рдВрднрд╛рд▓реЗрдЧрд╛?" },
        { speaker: "Employee", text: "Rahul has agreed to cover for me. I'll also be available on phone if anything urgent comes up.", hindi: "рд░рд╛рд╣реБрд▓ рдиреЗ рдореЗрд░реЗ рд▓рд┐рдП рдХрд╡рд░ рдХрд░рдиреЗ рдкрд░ рд╕рд╣рдорддрд┐ рдЬрддрд╛рдИ рд╣реИред рдпрджрд┐ рдХреБрдЫ рдЬрд░реВрд░реА рдЖрддрд╛ рд╣реИ рддреЛ рдореИрдВ рдлреЛрди рдкрд░ рднреА рдЙрдкрд▓рдмреНрдз рд░рд╣реВрдВрдЧрд╛ред" },
      ],
      keyPhrases: ["Request leave", "Family emergency", "Cover for me", "Available on phone"]
    },
    {
      id: 10,
      title: "Giving Presentation Feedback",
      emoji: "ЁЯУК",
      color: "from-pink-400 to-rose-500",
      difficulty: "hard",
      scenario: "Constructive feedback on colleague's work",
      dialogue: [
        { speaker: "Manager", text: "Overall, your presentation was well-structured. However, I have a few suggestions.", hindi: "рдХреБрд▓ рдорд┐рд▓рд╛рдХрд░, рдЖрдкрдХреА рдкреНрд░рд╕реНрддреБрддрд┐ рдЕрдЪреНрдЫреА рддрд░рд╣ рд╕реЗ рд╕рдВрд░рдЪрд┐рдд рдереАред рд╣рд╛рд▓рд╛рдВрдХрд┐, рдореЗрд░реЗ рдкрд╛рд╕ рдХреБрдЫ рд╕реБрдЭрд╛рд╡ рд╣реИрдВред" },
        { speaker: "Employee", text: "Thank you! I'm open to feedback. Please let me know what I can improve.", hindi: "рдзрдиреНрдпрд╡рд╛рдж! рдореИрдВ рдлреАрдбрдмреИрдХ рдХреЗ рд▓рд┐рдП рдЦреБрд▓рд╛ рд╣реВрдВред рдХреГрдкрдпрд╛ рдореБрдЭреЗ рдмрддрд╛рдПрдВ рдХрд┐ рдореИрдВ рдХреНрдпрд╛ рд╕реБрдзрд╛рд░ рдХрд░ рд╕рдХрддрд╛ рд╣реВрдВред" },
        { speaker: "Manager", text: "The data analysis was excellent, but you could have spent more time on actionable recommendations.", hindi: "рдбреЗрдЯрд╛ рд╡рд┐рд╢реНрд▓реЗрд╖рдг рдЙрддреНрдХреГрд╖реНрдЯ рдерд╛, рд▓реЗрдХрд┐рди рдЖрдк рдХрд╛рд░реНрд░рд╡рд╛рдИ рдпреЛрдЧреНрдп рд╕рд┐рдлрд╛рд░рд┐рд╢реЛрдВ рдкрд░ рдЕрдзрд┐рдХ рд╕рдордп рдмрд┐рддрд╛ рд╕рдХрддреЗ рдереЗред" },
        { speaker: "Employee", text: "I see. Should I prepare a follow-up document with detailed action points?", hindi: "рдореИрдВ рд╕рдордЭрддрд╛ рд╣реВрдВред рдХреНрдпрд╛ рдореБрдЭреЗ рд╡рд┐рд╕реНрддреГрдд рдХрд╛рд░реНрдп рдмрд┐рдВрджреБрдУрдВ рдХреЗ рд╕рд╛рде рдПрдХ рдЕрдиреБрд╡рд░реНрддреА рджрд╕реНрддрд╛рд╡реЗрдЬрд╝ рддреИрдпрд╛рд░ рдХрд░рдирд╛ рдЪрд╛рд╣рд┐рдП?" },
        { speaker: "Manager", text: "That would be perfect. Also, consider adding more visual aids next time to engage the audience better.", hindi: "рдпрд╣ рд╕рд╣реА рд░рд╣реЗрдЧрд╛ред рд╕рд╛рде рд╣реА, рджрд░реНрд╢рдХреЛрдВ рдХреЛ рдмреЗрд╣рддрд░ рдврдВрдЧ рд╕реЗ рд╢рд╛рдорд┐рд▓ рдХрд░рдиреЗ рдХреЗ рд▓рд┐рдП рдЕрдЧрд▓реА рдмрд╛рд░ рдЕрдзрд┐рдХ рджреГрд╢реНрдп рд╕рд╣рд╛рдпрддрд╛ рдЬреЛрдбрд╝рдиреЗ рдкрд░ рд╡рд┐рдЪрд╛рд░ рдХрд░реЗрдВред" },
      ],
      keyPhrases: ["Well-structured", "I'm open to feedback", "Actionable recommendations", "Follow-up document"]
    },
  ];

  const toggleComplete = (id) => {
    if (completedDialogues.includes(id)) {
      setCompletedDialogues(completedDialogues.filter(d => d !== id));
    } else {
      setCompletedDialogues([...completedDialogues, id]);
    }
  };

  const getDifficultyColor = (difficulty) => {
    if (difficulty === 'easy') return darkMode ? 'text-green-400' : 'text-green-600';
    if (difficulty === 'medium') return darkMode ? 'text-yellow-400' : 'text-yellow-600';
    return darkMode ? 'text-red-400' : 'text-red-600';
  };

  return (
    <div className={`min-h-screen ${darkMode ? 'bg-gradient-to-br from-[#0a0e27] to-[#1a1d3a]' : 'bg-gradient-to-br from-[#e8f5e9] via-[#e1f5fe] to-[#f3e5f5]'} transition-colors duration-500`}>
      {/* Header */}
      <header className={`sticky top-0 z-50 ${darkMode ? 'bg-[#0f1729]/90' : 'bg-white/80'} backdrop-blur-lg border-b ${darkMode ? 'border-[#2a3441]' : 'border-gray-200'} transition-colors duration-500`}>
        <div className="max-w-7xl mx-auto px-4 sm:px-6 md:px-12 py-4 flex justify-between items-center">
          <button 
            onClick={() => navigate('/intermediate-level')}
            className={`flex items-center gap-2 ${darkMode ? 'text-[#60a5fa] hover:text-[#3b82f6]' : 'text-[#1976d2] hover:text-[#1565c0]'} font-semibold transition-all hover:scale-105`}
          >
            <span className="text-xl">тЖР</span>
            <span>Back to Topics</span>
          </button>
          
          <div className="flex items-center gap-3">
            <div className={`hidden sm:flex items-center gap-2 ${darkMode ? 'bg-[#1e293b]' : 'bg-blue-100'} px-4 py-2 rounded-full`}>
              <span className="text-xl">ЁЯТм</span>
              <span className={`font-semibold ${darkMode ? 'text-[#60a5fa]' : 'text-blue-600'}`}>
                {completedDialogues.length}/{dialogues.length}
              </span>
            </div>
            <button 
              onClick={() => setDarkMode(!darkMode)}
              className={`${darkMode ? 'bg-[#60a5fa] hover:bg-[#3b82f6]' : 'bg-[#1976d2] hover:bg-[#1565c0]'} text-white p-2.5 rounded-full transition-all duration-300 hover:scale-110 shadow-lg`}
            >
              {darkMode ? 'тШАя╕П' : 'ЁЯМЩ'}
            </button>
          </div>
        </div>
      </header>

      {/* Hero Section */}
      <section className="max-w-7xl mx-auto px-4 sm:px-6 md:px-12 py-8 sm:py-12">
        <div className="text-center mb-8">
          <div className="text-6xl mb-4">ЁЯТм</div>
          <h1 className={`text-3xl sm:text-4xl md:text-5xl font-bold ${darkMode ? 'text-white' : 'text-gray-900'} mb-3`}>
            Real-Life Dialogues
          </h1>
          <p className={`text-base sm:text-lg ${darkMode ? 'text-[#94a3b8]' : 'text-gray-600'} max-w-2xl mx-auto`}>
            Practice professional conversations for work, business, and daily situations
          </p>
        </div>

        {/* Dialogues Grid */}
        <div className="grid gap-4 sm:grid-cols-2 lg:grid-cols-3">
          {dialogues.map((dialogue) => (
            <div
              key={dialogue.id}
              onClick={() => setSelectedDialogue(dialogue)}
              className={`group cursor-pointer rounded-2xl overflow-hidden ${
                darkMode ? 'bg-[#1e293b]/50 border-2 border-[#374151]' : 'bg-white border-2 border-gray-200'
              } transition-all duration-300 hover:scale-105 hover:shadow-xl ${
                darkMode ? 'hover:border-[#60a5fa]' : 'hover:border-blue-400'
              } ${completedDialogues.includes(dialogue.id) ? 'opacity-60' : ''}`}
            >
              <div className={`bg-gradient-to-br ${dialogue.color} p-4 text-white`}>
                <div className="flex justify-between items-start mb-2">
                  <span className="text-3xl">{dialogue.emoji}</span>
                  <button
                    onClick={(e) => {
                      e.stopPropagation();
                      toggleComplete(dialogue.id);
                    }}
                    className={`${completedDialogues.includes(dialogue.id) ? 'bg-white text-green-600' : 'bg-white/20'} p-1.5 rounded-full hover:scale-110 transition-all`}
                  >
                    {completedDialogues.includes(dialogue.id) ? 'тЬУ' : 'тЧЛ'}
                  </button>
                </div>
                <h3 className="text-xl font-bold mb-1">{dialogue.title}</h3>
                <p className="text-sm opacity-90">{dialogue.scenario}</p>
              </div>
              <div className="p-4">
                <div className="flex justify-between items-center mb-3">
                  <span className={`text-xs font-semibold ${getDifficultyColor(dialogue.difficulty)} uppercase`}>
                    {dialogue.difficulty}
                  </span>
                  <span className={`text-xs ${darkMode ? 'text-[#94a3b8]' : 'text-gray-600'}`}>
                    {dialogue.dialogue.length} exchanges
                  </span>
                </div>
                <div className={`text-xs ${darkMode ? 'text-[#94a3b8]' : 'text-gray-600'} mb-3`}>
                  <strong>Key Phrases:</strong> {dialogue.keyPhrases.slice(0, 2).join(', ')}
                </div>
                <span className={`text-xs ${darkMode ? 'text-[#60a5fa]' : 'text-blue-600'} font-semibold`}>
                  Click to practice тЖТ
                </span>
              </div>
            </div>
          ))}
        </div>
      </section>

      {/* Dialogue Detail Modal */}
      {selectedDialogue && (
        <div 
          className="fixed inset-0 bg-black/60 backdrop-blur-sm z-50 flex items-center justify-center p-4"
          onClick={() => setSelectedDialogue(null)}
        >
          <div 
            className={`${darkMode ? 'bg-[#1e293b]' : 'bg-white'} rounded-3xl max-w-3xl w-full max-h-[90vh] overflow-y-auto`}
            onClick={(e) => e.stopPropagation()}
          >
            <div className={`bg-gradient-to-br ${selectedDialogue.color} p-8 text-white text-center sticky top-0`}>
              <div className="text-6xl mb-4">{selectedDialogue.emoji}</div>
              <h2 className="text-3xl font-bold mb-2">{selectedDialogue.title}</h2>
              <p className="text-sm opacity-90">{selectedDialogue.scenario}</p>
            </div>
            <div className="p-8">
              <div className="space-y-4 mb-6">
                {selectedDialogue.dialogue.map((line, idx) => (
                  <div key={idx} className={`${darkMode ? 'bg-[#0f1729]' : 'bg-gray-50'} p-4 rounded-xl`}>
                    <div className="flex items-start gap-3">
                      <div className={`${darkMode ? 'bg-[#60a5fa]' : 'bg-blue-500'} text-white px-3 py-1 rounded-full text-sm font-semibold flex-shrink-0`}>
                        {line.speaker}
                      </div>
                      <div className="flex-1">
                        <p className={`${darkMode ? 'text-[#e0e7ff]' : 'text-gray-900'} font-medium mb-1`}>
                          {line.text}
                        </p>
                        <p className={`text-sm ${darkMode ? 'text-[#94a3b8]' : 'text-gray-600'}`}>
                          {line.hindi}
                        </p>
                      </div>
                    </div>
                  </div>
                ))}
              </div>
              <div className={`${darkMode ? 'bg-[#0f1729]' : 'bg-blue-50'} p-4 rounded-xl mb-6`}>
                <h4 className={`font-semibold ${darkMode ? 'text-[#e0e7ff]' : 'text-gray-900'} mb-2`}>
                  Key Phrases to Remember:
                </h4>
                <div className="flex flex-wrap gap-2">
                  {selectedDialogue.keyPhrases.map((phrase, idx) => (
                    <span key={idx} className={`${darkMode ? 'bg-[#1e293b] text-[#60a5fa]' : 'bg-white text-blue-600'} px-3 py-1 rounded-full text-sm font-medium`}>
                      {phrase}
                    </span>
                  ))}
                </div>
              </div>
              <button
                onClick={() => {
                  toggleComplete(selectedDialogue.id);
                  setSelectedDialogue(null);
                }}
                className={`w-full ${
                  completedDialogues.includes(selectedDialogue.id)
                    ? 'bg-green-600 hover:bg-green-700'
                    : `bg-gradient-to-r ${selectedDialogue.color}`
                } text-white font-bold py-4 rounded-full transition-all hover:scale-105`}
              >
                {completedDialogues.includes(selectedDialogue.id) ? 'тЬУ Marked as Practiced' : 'Mark as Practiced'}
              </button>
            </div>
          </div>
        </div>
      )}
    </div>
  );
}
