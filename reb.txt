import React, { useState, useEffect } from 'react';
import { useNavigate } from 'react-router-dom';

export default function Leaderboards() {
  const navigate = useNavigate();
  const [darkMode, setDarkMode] = useState(false);
  const [selectedTab, setSelectedTab] = useState('global'); // global, friends, country
  const [timeFilter, setTimeFilter] = useState('allTime'); // allTime, thisWeek, today

  // Mock user data (Backend se aayega)
  const currentUser = {
    id: 'user123',
    name: 'You',
    avatar: '😊',
    xp: 2450,
    rank: 47,
    streak: 12,
    missionsCompleted: 35,
    country: 'India'
  };

  // Mock leaderboard data
  const globalLeaderboard = [
    { id: 1, name: 'Rahul Sharma', avatar: '🏆', xp: 8520, streak: 45, missionsCompleted: 120, country: 'India', badge: '👑' },
    { id: 2, name: 'Priya Patel', avatar: '🎯', xp: 7890, streak: 38, missionsCompleted: 105, country: 'India', badge: '🥈' },
    { id: 3, name: 'Amit Kumar', avatar: '🚀', xp: 7340, streak: 42, missionsCompleted: 98, country: 'India', badge: '🥉' },
    { id: 4, name: 'Sarah Johnson', avatar: '⭐', xp: 6850, streak: 35, missionsCompleted: 92, country: 'USA' },
    { id: 5, name: 'Mohammed Ali', avatar: '🎪', xp: 6420, streak: 30, missionsCompleted: 88, country: 'UAE' },
    { id: 6, name: 'Emily Chen', avatar: '🌟', xp: 6100, streak: 28, missionsCompleted: 85, country: 'China' },
    { id: 7, name: 'Carlos Rodriguez', avatar: '🎨', xp: 5890, streak: 26, missionsCompleted: 82, country: 'Spain' },
    { id: 8, name: 'Aisha Khan', avatar: '💫', xp: 5670, streak: 25, missionsCompleted: 79, country: 'Pakistan' },
    { id: 9, name: 'David Kim', avatar: '🎭', xp: 5450, streak: 23, missionsCompleted: 76, country: 'Korea' },
    { id: 10, name: 'Lisa Anderson', avatar: '🌈', xp: 5230, streak: 22, missionsCompleted: 73, country: 'Australia' },
    { id: 11, name: 'Raj Malhotra', avatar: '🎬', xp: 5010, streak: 20, missionsCompleted: 70, country: 'India' },
    { id: 12, name: 'Nina Gupta', avatar: '🎵', xp: 4890, streak: 19, missionsCompleted: 68, country: 'India' },
    { id: 13, name: 'James Wilson', avatar: '🎸', xp: 4670, streak: 18, missionsCompleted: 65, country: 'UK' },
    { id: 14, name: 'Maria Garcia', avatar: '🎹', xp: 4450, streak: 17, missionsCompleted: 62, country: 'Mexico' },
    { id: 15, name: 'Ahmed Hassan', avatar: '🎺', xp: 4230, streak: 16, missionsCompleted: 59, country: 'Egypt' },
    // Add more users...
    { id: 45, name: 'Alex Brown', avatar: '🎤', xp: 2550, streak: 13, missionsCompleted: 37, country: 'Canada' },
    { id: 46, name: 'Sophie Martin', avatar: '🎧', xp: 2480, streak: 12, missionsCompleted: 36, country: 'France' },
    { id: 47, name: 'You', avatar: '😊', xp: 2450, streak: 12, missionsCompleted: 35, country: 'India', isCurrentUser: true },
    { id: 48, name: 'Tom Harris', avatar: '🎮', xp: 2420, streak: 11, missionsCompleted: 34, country: 'Ireland' },
    { id: 49, name: 'Anna Lee', avatar: '🎲', xp: 2390, streak: 11, missionsCompleted: 33, country: 'Singapore' },
    { id: 50, name: 'Chris Evans', avatar: '🎳', xp: 2360, streak: 10, missionsCompleted: 32, country: 'New Zealand' }
  ];

  const getRankBadge = (rank) => {
    if (rank === 1) return '👑';
    if (rank === 2) return '🥈';
    if (rank === 3) return '🥉';
    if (rank <= 10) return '🏅';
    if (rank <= 50) return '⭐';
    return '🎯';
  };

  const getRankColor = (rank) => {
    if (rank === 1) return 'text-yellow-400';
    if (rank === 2) return 'text-gray-400';
    if (rank === 3) return 'text-orange-400';
    return darkMode ? 'text-[#93c5fd]' : 'text-[#1565c0]';
  };

  return (
    <div className={`min-h-screen ${darkMode ? 'bg-gradient-to-br from-[#0a0e27] to-[#1a1d3a]' : 'bg-gradient-to-br from-[#e3f2fd] to-[#bbdefb]'} transition-all duration-500`}>
      {/* Header */}
      <header className={`sticky top-0 z-50 backdrop-blur-lg px-4 sm:px-8 py-4 flex justify-between items-center border-b transition-all duration-500 ${
        darkMode ? 'bg-[#0f1729]/90 border-[#2a3441]' : 'bg-white/80 border-[#90caf9] shadow-[0_4px_12px_rgba(33,150,243,0.1)]'
      }`}>
        <h1 
          onClick={() => navigate('/dashboard')}
          className={`text-2xl sm:text-3xl font-extrabold ${darkMode ? 'text-[#60a5fa]' : 'text-[#1976d2]'} cursor-pointer`}
        >
          PrepTalk
        </h1>
        <div className="flex gap-3">
          <button 
            onClick={() => navigate('/dashboard')}
            className={`px-4 py-2 rounded-full border-2 ${darkMode ? 'border-[#60a5fa] text-[#60a5fa]' : 'border-[#1976d2] text-[#1976d2]'} hover:scale-105 transition`}
          >
            ← Dashboard
          </button>
          <button 
            onClick={() => setDarkMode(!darkMode)}
            className={`p-2.5 rounded-full ${darkMode ? 'bg-[#60a5fa]' : 'bg-[#1976d2]'} text-white hover:scale-110 transition`}
          >
            {darkMode ? '☀️' : '🌙'}
          </button>
        </div>
      </header>

      {/* Main Content */}
      <div className="max-w-6xl mx-auto px-4 py-8">
        {/* Hero Section */}
        <div className="text-center mb-12">
          <div className="text-8xl mb-6 animate-bounce">🏆</div>
          <h2 className={`text-5xl sm:text-6xl font-bold mb-4 ${darkMode ? 'text-white' : 'text-[#0d47a1]'}`}>
            Leaderboards
          </h2>
          <p className={`text-xl ${darkMode ? 'text-[#93c5fd]' : 'text-[#1565c0]'}`}>
            Compete with learners worldwide and climb the ranks!
          </p>
        </div>

        {/* Your Rank Card */}
        <div className={`rounded-3xl p-8 mb-8 ${
          darkMode ? 'bg-gradient-to-r from-[#1e3a8a] to-[#1e40af]' : 'bg-gradient-to-r from-[#1976d2] to-[#1565c0]'
        } text-white shadow-2xl`}>
          <div className="flex items-center justify-between flex-wrap gap-6">
            <div className="flex items-center gap-6">
              <div className="text-7xl">{currentUser.avatar}</div>
              <div>
                <h3 className="text-3xl font-bold mb-2">{currentUser.name}</h3>
                <div className="flex items-center gap-4 flex-wrap">
                  <span className="text-lg">🏅 Rank #{currentUser.rank}</span>
                  <span className="text-lg">⭐ {currentUser.xp} XP</span>
                  <span className="text-lg">🔥 {currentUser.streak} Day Streak</span>
                </div>
              </div>
            </div>
            <div className="text-center">
              <div className="text-6xl mb-2">{getRankBadge(currentUser.rank)}</div>
              <div className="text-sm opacity-80">Your Badge</div>
            </div>
          </div>
        </div>

        {/* Tabs */}
        <div className="flex gap-4 mb-8 flex-wrap justify-center">
          {[
            { id: 'global', label: 'Global', icon: '🌍' },
            { id: 'country', label: 'India', icon: '🇮🇳' },
            { id: 'friends', label: 'Friends', icon: '👥' }
          ].map(tab => (
            <button
              key={tab.id}
              onClick={() => setSelectedTab(tab.id)}
              className={`px-6 py-3 rounded-xl font-bold text-lg transition-all ${
                selectedTab === tab.id
                  ? darkMode ? 'bg-[#60a5fa] text-white' : 'bg-[#1976d2] text-white'
                  : darkMode ? 'bg-[#161b22] text-[#93c5fd] hover:bg-[#1e293b]' : 'bg-white text-[#1565c0] hover:bg-blue-50'
              } shadow-lg hover:scale-105`}
            >
              {tab.icon} {tab.label}
            </button>
          ))}
        </div>

        {/* Time Filter */}
        <div className="flex gap-4 mb-8 justify-center flex-wrap">
          {[
            { id: 'allTime', label: 'All Time' },
            { id: 'thisWeek', label: 'This Week' },
            { id: 'today', label: 'Today' }
          ].map(filter => (
            <button
              key={filter.id}
              onClick={() => setTimeFilter(filter.id)}
              className={`px-5 py-2 rounded-full text-sm font-semibold transition-all ${
                timeFilter === filter.id
                  ? darkMode ? 'bg-[#1e293b] text-white border-2 border-[#60a5fa]' : 'bg-blue-100 text-[#1976d2] border-2 border-[#1976d2]'
                  : darkMode ? 'bg-[#161b22] text-[#93c5fd]' : 'bg-white text-[#1565c0]'
              }`}
            >
              {filter.label}
            </button>
          ))}
        </div>

        {/* Top 3 Podium */}
        <div className="grid grid-cols-3 gap-4 mb-12 max-w-4xl mx-auto">
          {/* 2nd Place */}
          <div className="flex flex-col items-center mt-8">
            <div className="text-6xl mb-3">{globalLeaderboard[1].avatar}</div>
            <div className={`w-full rounded-t-2xl p-6 text-center ${darkMode ? 'bg-gray-600' : 'bg-gray-300'} shadow-xl`}>
              <div className="text-5xl mb-2">🥈</div>
              <div className={`font-bold text-lg mb-1 ${darkMode ? 'text-white' : 'text-gray-900'}`}>
                {globalLeaderboard[1].name}
              </div>
              <div className={`text-sm ${darkMode ? 'text-gray-200' : 'text-gray-700'}`}>
                {globalLeaderboard[1].xp} XP
              </div>
            </div>
            <div className={`w-full h-32 ${darkMode ? 'bg-gray-700' : 'bg-gray-400'} rounded-b-2xl`}></div>
          </div>

          {/* 1st Place */}
          <div className="flex flex-col items-center">
            <div className="text-7xl mb-3 animate-bounce">{globalLeaderboard[0].avatar}</div>
            <div className={`w-full rounded-t-2xl p-6 text-center ${darkMode ? 'bg-yellow-600' : 'bg-yellow-400'} shadow-2xl`}>
              <div className="text-6xl mb-2">👑</div>
              <div className="font-bold text-xl mb-1 text-gray-900">
                {globalLeaderboard[0].name}
              </div>
              <div className="text-sm text-gray-800">
                {globalLeaderboard[0].xp} XP
              </div>
            </div>
            <div className={`w-full h-48 ${darkMode ? 'bg-yellow-700' : 'bg-yellow-500'} rounded-b-2xl`}></div>
          </div>

          {/* 3rd Place */}
          <div className="flex flex-col items-center mt-12">
            <div className="text-6xl mb-3">{globalLeaderboard[2].avatar}</div>
            <div className={`w-full rounded-t-2xl p-6 text-center ${darkMode ? 'bg-orange-700' : 'bg-orange-400'} shadow-xl`}>
              <div className="text-5xl mb-2">🥉</div>
              <div className={`font-bold text-lg mb-1 ${darkMode ? 'text-white' : 'text-gray-900'}`}>
                {globalLeaderboard[2].name}
              </div>
              <div className={`text-sm ${darkMode ? 'text-gray-200' : 'text-gray-800'}`}>
                {globalLeaderboard[2].xp} XP
              </div>
            </div>
            <div className={`w-full h-24 ${darkMode ? 'bg-orange-800' : 'bg-orange-500'} rounded-b-2xl`}></div>
          </div>
        </div>

        {/* Full Leaderboard Table */}
        <div className={`rounded-2xl overflow-hidden shadow-2xl ${darkMode ? 'bg-[#161b22]' : 'bg-white'}`}>
          <div className={`p-4 ${darkMode ? 'bg-[#1e293b]' : 'bg-[#1976d2]'} text-white`}>
            <h3 className="text-2xl font-bold">Full Rankings</h3>
          </div>

          <div className="overflow-x-auto">
            <table className="w-full">
              <thead className={`${darkMode ? 'bg-[#0d1117]' : 'bg-blue-50'}`}>
                <tr>
                  <th className={`p-4 text-left ${darkMode ? 'text-[#93c5fd]' : 'text-[#1565c0]'}`}>Rank</th>
                  <th className={`p-4 text-left ${darkMode ? 'text-[#93c5fd]' : 'text-[#1565c0]'}`}>User</th>
                  <th className={`p-4 text-right ${darkMode ? 'text-[#93c5fd]' : 'text-[#1565c0]'}`}>XP</th>
                  <th className={`p-4 text-right ${darkMode ? 'text-[#93c5fd]' : 'text-[#1565c0]'}`}>Streak</th>
                  <th className={`p-4 text-right ${darkMode ? 'text-[#93c5fd]' : 'text-[#1565c0]'}`}>Missions</th>
                </tr>
              </thead>
              <tbody>
                {globalLeaderboard.map((user, index) => (
                  <tr 
                    key={user.id}
                    className={`border-b transition-all ${
                      user.isCurrentUser 
                        ? darkMode ? 'bg-[#60a5fa]/20 border-[#60a5fa]' : 'bg-blue-100 border-blue-300'
                        : darkMode ? 'border-[#30363d] hover:bg-[#1e293b]' : 'border-gray-200 hover:bg-blue-50'
                    }`}
                  >
                    <td className="p-4">
                      <div className="flex items-center gap-2">
                        <span className={`text-2xl ${getRankColor(index + 1)}`}>
                          {getRankBadge(index + 1)}
                        </span>
                        <span className={`font-bold text-lg ${getRankColor(index + 1)}`}>
                          #{index + 1}
                        </span>
                      </div>
                    </td>
                    <td className="p-4">
                      <div className="flex items-center gap-3">
                        <span className="text-3xl">{user.avatar}</span>
                        <div>
                          <div className={`font-bold ${darkMode ? 'text-white' : 'text-gray-900'} ${user.isCurrentUser ? 'text-lg' : ''}`}>
                            {user.name} {user.isCurrentUser && '(You)'}
                          </div>
                          <div className={`text-xs ${darkMode ? 'text-[#93c5fd]' : 'text-gray-600'}`}>
                            {user.country}
                          </div>
                        </div>
                      </div>
                    </td>
                    <td className={`p-4 text-right font-bold text-lg ${darkMode ? 'text-[#60a5fa]' : 'text-[#1976d2]'}`}>
                      {user.xp.toLocaleString()}
                    </td>
                    <td className={`p-4 text-right ${darkMode ? 'text-white' : 'text-gray-900'}`}>
                      🔥 {user.streak}
                    </td>
                    <td className={`p-4 text-right ${darkMode ? 'text-white' : 'text-gray-900'}`}>
                      ✅ {user.missionsCompleted}
                    </td>
                  </tr>
                ))}
              </tbody>
            </table>
          </div>
        </div>

        {/* Info Box */}
        <div className={`mt-8 rounded-2xl p-6 ${darkMode ? 'bg-[#161b22]' : 'bg-blue-50'} border-2 ${darkMode ? 'border-[#30363d]' : 'border-blue-200'}`}>
          <div className="flex items-start gap-4">
            <div className="text-4xl">💡</div>
            <div>
              <h4 className={`font-bold mb-2 text-lg ${darkMode ? 'text-[#60a5fa]' : 'text-[#1976d2]'}`}>
                How to Climb the Leaderboard
              </h4>
              <ul className={`space-y-1 text-sm ${darkMode ? 'text-[#93c5fd]' : 'text-[#1565c0]'}`}>
                <li>✅ Complete daily missions to earn XP</li>
                <li>✅ Maintain your streak for bonus points</li>
                <li>✅ Practice consistently to improve your rank</li>
                <li>✅ Challenge friends and compete together</li>
              </ul>
            </div>
          </div>
        </div>
      </div>
    </div>
  );
}
